


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: **-UUU-*Masaad Khan Ravi Avalkotka
                       r**update this***
    3 00000000         ; Date Created: 2/14/2017
    4 00000000         ; Last Modified: 3/2/2020
    5 00000000         ; You are given a simple stepper motor software system w
                       ith one input and
    6 00000000         ; four outputs. This program runs, but you are asked to 
                       add minimally intrusive
    7 00000000         ; debugging instruments to verify it is running properly
                       . 
    8 00000000         ; The system outputs in one of three modes:
    9 00000000         ; 1) cycles through 10,6,5,9,... at a constant rate
   10 00000000         ; 2) cycles through 5,6,10,9,... at a constant rate
   11 00000000         ; 3) does not change the output, but still outputs at a 
                       constant rate
   12 00000000         ; When PA4 goes high and low again, the system cycles th
                       rough these modes
   13 00000000         ; The output rate will be different on the simulator ver
                       sus the real board
   14 00000000         ;   Insert debugging instruments which gather data (stat
                       e and timing)
   15 00000000         ;   to verify that the system is functioning as expected
                       .
   16 00000000         ; Hardware connections (External: One button and four ou
                       tputs to stepper motor)
   17 00000000         ;  PA4 is Button input  (1 means pressed, 0 means not pr
                       essed)
   18 00000000         ;  PE3-0 are stepper motor outputs 
   19 00000000         ;  PF2 is Blue LED on Launchpad used as a heartbeat
   20 00000000         ; Instrumentation data to be gathered is as follows:
   21 00000000         ; After every output to Port E, collect one state and ti
                       me entry. 
   22 00000000         ; The state information is the 5 bits on Port A bit 4 an
                       d Port E PE3-0
   23 00000000         ;   place one 8-bit entry in your Data Buffer  
   24 00000000         ; The time information is the 24-bit time difference bet
                       ween this output and the previous (in 12.5ns units)
   25 00000000         ;   place one 32-bit entry in the Time Buffer
   26 00000000         ;    24-bit value of the SysTick's Current register (NVI
                       C_ST_CURRENT_R)
   27 00000000         ;    you must handle the roll over as Current goes 3,2,1
                       ,0,0x00FFFFFF,0xFFFFFE,
   28 00000000         ; Note: The size of both buffers is 100 entries. Once yo
                       u fill these
   29 00000000         ;       entries you should stop collecting data
   30 00000000         ; The heartbeat is an indicator of the running of the pr
                       ogram. 
   31 00000000         ; On each iteration of the main loop of your program tog
                       gle the 
   32 00000000         ; LED to indicate that your code(system) is live (not st
                       uck or dead).
   33 00000000         
   34 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   35 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018



ARM Macro Assembler    Page 2 


   36 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   37 00000000 40004400 
                       GPIO_PORTA_DIR_R
                               EQU              0x40004400
   38 00000000 4000451C 
                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C
   39 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   40 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   41 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   42 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   43 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   44 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   45 00000000         ; RAM Area
   46 00000000                 AREA             DATA, ALIGN=2
   47 00000000 00 00 00 
              00       Index   SPACE            4           ; index into Steppe
                                                            r table 0,1,2,3
   48 00000004 00 00 00 
              00       Direction
                               SPACE            4           ; -1 for CCW, 0 for
                                                             stop 1 for CW
   49 00000008         
   50 00000008         ;place your debug variables in RAM here
   51 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       DataBuffer
                               SPACE            100
   52 0000006C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       TimeBuffer
                               SPACE            400
   53 000001FC 00 00 00 
              00       DataPt  SPACE            4
   54 00000200 00 00 00 
              00       TimePt  SPACE            4
   55 00000204 00 00 00 
              00       Previous
                               SPACE            4
   56 00000208         ; ROM Area
   57 00000208                 IMPORT           TExaS_Init
   58 00000208                 IMPORT           SysTick_Init
   59 00000208         ;-UUU-Import routine(s) from other assembly files (like 
                       SysTick.s) here
   60 00000208                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   61 00000000                 THUMB
   62 00000000 05 06 0A 
              09       Stepper DCB              5,6,10,9
   63 00000004                 EXPORT           Start
   64 00000004         
   65 00000004         Start
   66 00000004         ; TExaS_Init sets bus clock at 80 MHz
   67 00000004         ; PA4, PE3-PE0 out logic analyzer to TExasDisplay
   68 00000004 486D            LDR              R0,=SendDataToLogicAnalyzer
   69 00000006 F040 0001       ORR              R0,R0,#1
   70 0000000A F7FF FFFE       BL               TExaS_Init  ; logic analyzer, 8
                                                            0 MHz
   71 0000000E         ;place your initializations here
   72 0000000E 486C            LDR              R0, =SYSCTL_RCGCGPIO_R



ARM Macro Assembler    Page 6 


   73 00000010 6801            LDR              R1, [R0]
   74 00000012 F041 0120       ORR              R1, #0x20
   75 00000016 6001            STR              R1, [R0]
   76 00000018 BF00            NOP
   77 0000001A BF00            NOP
   78 0000001C 4869            LDR              R0, =GPIO_PORTF_DIR_R
   79 0000001E 6801            LDR              R1, [R0]
   80 00000020 F041 0104       ORR              R1, #0x4
   81 00000024 6001            STR              R1, [R0]
   82 00000026 4868            LDR              R0, =GPIO_PORTF_DEN_R
   83 00000028 6801            LDR              R1, [R0]
   84 0000002A F041 0104       ORR              R1, #0x4
   85 0000002E 6001            STR              R1, [R0]
   86 00000030 4866            LDR              R0, =Previous
   87 00000032 F06F 417F       LDR              R1, =0x00FFFFFF
   88 00000036 6001            STR              R1, [R0]
   89 00000038 F000 F83D       BL               Heartbeat
   90 0000003C F000 F821       BL               Stepper_Init ; initialize stepp
                                                            er motor
   91 00000040 F000 F840       BL               Switch_Init ; initialize switch
                                                             input
   92 00000044         ;**********************
   93 00000044 F000 F863       BL               Debug_Init  ;(you write this)
   94 00000048         ;**********************
   95 00000048 B662            CPSIE            I           ; TExaS logic analy
                                                            zer runs on interru
                                                            pts
   96 0000004A F04F 0500       MOV              R5,#0       ; last PA4
   97 0000004E         loop
   98 0000004E 4960            LDR              R1,=GPIO_PORTA_DATA_R
   99 00000050 680C            LDR              R4,[R1]     ;current value of s
                                                            witch
  100 00000052 F004 0410       AND              R4,R4,#0x10 ; select just bit 4
                                                            
  101 00000056 2C00            CMP              R4,#0
  102 00000058 D00A            BEQ              no          ; skip if not pushe
                                                            d
  103 0000005A 2D00            CMP              R5,#0
  104 0000005C D108            BNE              no          ; skip if pushed la
                                                            st time
  105 0000005E         ; this time yes, last time no
  106 0000005E 495D            LDR              R1,=Direction
  107 00000060 6808            LDR              R0,[R1]     ; current direction
                                                            
  108 00000062 F100 0001       ADD              R0,R0,#1    ;-1,0,1 to 0,1,2
  109 00000066 2802            CMP              R0,#2
  110 00000068 D101            BNE              ok
  111 0000006A F04F 30FF       MOV              R0,#-1      ; cycles through va
                                                            lues -1,0,1
  112 0000006E 6008    ok      STR              R0,[R1]     ; Direction=0 (CW) 
                                                             
  113 00000070 4625    no      MOV              R5,R4       ; setup for next ti
                                                            me      ;82 cycles 
                                                            inside Debug Captur
                                                            e ASK
  114 00000072 F000 F839       BL               Stepper_Step ;19 instructions i
                                                            n this loop, 14 ins
                                                            tructions to get to
                                                             Debug_Capture, (19



ARM Macro Assembler    Page 7 


                                                            +14)*2 = 66 cycles 
                                                                           
  115 00000076 4858            LDR              R0,=1600000 ;66 cycles * 12.5ns
                                                             = 0.825ms
  116 00000078 F000 F846       BL               Wait        ; time delay fixed 
                                                            but not accurate   
                                                            ;1.025/(1.025+0.825
                                                            )*100 = 55% downtim
                                                            e between Debug_Cap
                                                            ture
  117 0000007C F000 F81B       BL               Heartbeat
  118 00000080 E7E5            B                loop
  119 00000082         ;Initialize stepper motor interface
  120 00000082         Stepper_Init
  121 00000082 F04F 0001       MOV              R0,#1
  122 00000086 4953            LDR              R1,=Direction
  123 00000088 6008            STR              R0,[R1]     ; Direction=0 (CW)
  124 0000008A F04F 0000       MOV              R0,#0
  125 0000008E 4953            LDR              R1,=Index
  126 00000090 6008            STR              R0,[R1]     ; Index=0
  127 00000092         ; activate clock for Port E
  128 00000092 494B            LDR              R1, =SYSCTL_RCGCGPIO_R
  129 00000094 6808            LDR              R0, [R1]
  130 00000096 F040 0010       ORR              R0, R0, #0x10 ; Clock for E
  131 0000009A 6008            STR              R0, [R1]
  132 0000009C BF00            NOP
  133 0000009E BF00            NOP                          ; allow time to fin
                                                            ish activating
  134 000000A0         ; set direction register
  135 000000A0 494F            LDR              R1, =GPIO_PORTE_DIR_R
  136 000000A2 6808            LDR              R0, [R1]
  137 000000A4 F040 000F       ORR              R0, R0, #0x0F 
                                                            ; Output on PE0-PE3
                                                            
  138 000000A8 6008            STR              R0, [R1]
  139 000000AA         ; enable digital port
  140 000000AA 494E            LDR              R1, =GPIO_PORTE_DEN_R
  141 000000AC 6808            LDR              R0, [R1]
  142 000000AE F040 000F       ORR              R0, R0, #0x0F ; enable PE3-0
  143 000000B2 6008            STR              R0, [R1]
  144 000000B4 4770            BX               LR
  145 000000B6         ;Heartbeat function
  146 000000B6         Heartbeat
  147 000000B6 B507            PUSH             {R0, R1, LR, R2}
  148 000000B8 484B            LDR              R0, =GPIO_PORTF_DATA_R
  149 000000BA 6801            LDR              R1, [R0]
  150 000000BC F081 0104       EOR              R1, #0x4
  151 000000C0 6001            STR              R1, [R0]
  152 000000C2 BD07            POP              {R0, R1, PC, R2}
  153 000000C4         ;Initialize switch interface
  154 000000C4         Switch_Init
  155 000000C4         ; activate clock for Port A
  156 000000C4 493E            LDR              R1, =SYSCTL_RCGCGPIO_R
  157 000000C6 6808            LDR              R0, [R1]
  158 000000C8 F040 0001       ORR              R0, R0, #0x01 ; Clock for A
  159 000000CC 6008            STR              R0, [R1]
  160 000000CE BF00            NOP
  161 000000D0 BF00            NOP                          ; allow time to fin
                                                            ish activating



ARM Macro Assembler    Page 8 


  162 000000D2         ; set direction register
  163 000000D2 4946            LDR              R1, =GPIO_PORTA_DIR_R
  164 000000D4 6808            LDR              R0, [R1]
  165 000000D6 F020 0010       BIC              R0, R0, #0x10 ; Input on PA4
  166 000000DA 6008            STR              R0, [R1]
  167 000000DC         ; 5) enable digital port
  168 000000DC 4944            LDR              R1, =GPIO_PORTA_DEN_R
  169 000000DE 6808            LDR              R0, [R1]
  170 000000E0 F040 0010       ORR              R0, R0, #0x10 ; enable PA4
  171 000000E4 6008            STR              R0, [R1]
  172 000000E6 4770            BX               LR
  173 000000E8         ; Step the motor clockwise
  174 000000E8         ; Direction determines the rotational direction
  175 000000E8         ; Input: None
  176 000000E8         ; Output: None
  177 000000E8         Stepper_Step
  178 000000E8 B510            PUSH             {R4,LR}
  179 000000EA 493C            LDR              R1,=Index
  180 000000EC 680A            LDR              R2,[R1]     ; old Index
  181 000000EE 4B39            LDR              R3,=Direction
  182 000000F0 6818            LDR              R0,[R3]     ; -1 for CCW, 0 for
                                                             stop 1 for CW
  183 000000F2 4402            ADD              R2,R2,R0
  184 000000F4 F002 0203       AND              R2,R2,#3    ; 0,1,2,3,0,1,2,...
                                                            
  185 000000F8 600A            STR              R2,[R1]     ; new Index
  186 000000FA 4B3E            LDR              R3,=Stepper ; table
  187 000000FC 5CD0            LDRB             R0,[R2,R3]  ; next output: 5,6,
                                                            10,9,5,6,10,...
  188 000000FE 493E            LDR              R1,=GPIO_PORTE_DATA_R 
                                                            ; change PE3-PE0
  189 00000100 6008            STR              R0,[R1]
  190 00000102 F000 F81E       BL               Debug_Capture
  191 00000106 BD10            POP              {R4,PC}
  192 00000108         ; inaccurate and inefficient time delay
  193 00000108         Wait
  194 00000108 1E40            SUBS             R0,R0,#1    ; outer loop
  195 0000010A D1FD            BNE              Wait
  196 0000010C 4770            BX               LR
  197 0000010E         
  198 0000010E         Debug_Init
  199 0000010E B51F            PUSH             {R0-R4,LR}
  200 00000110         ; you write this
  201 00000110 F7FF FFFE       BL               SysTick_Init
  202 00000114 4839            LDR              R0, =DataBuffer
  203 00000116 F04F 0164       MOV              R1, #100
  204 0000011A 4B39            LDR              R3, =DataPt
  205 0000011C 6018            STR              R0, [R3]
  206 0000011E F04F 02FF       LDR              R2, =0xFF
  207 00000122 4B38            LDR              R3, =TimeBuffer
  208 00000124 4C38            LDR              R4, =TimePt
  209 00000126 6023            STR              R3, [R4]
  210 00000128 F04F 34FF       LDR              R4, =0xFFFFFFFF
  211 0000012C         loop2
  212 0000012C 7002            STRB             R2, [R0]
  213 0000012E 601C            STR              R4, [R3]
  214 00000130 F100 0001       ADD              R0, R0, #1
  215 00000134 F103 0304       ADD              R3, R3, #4
  216 00000138 F1A1 0101       SUB              R1, R1, #1



ARM Macro Assembler    Page 9 


  217 0000013C 2900            CMP              R1, #0
  218 0000013E D1F5            BNE              loop2
  219 00000140 BD1F            POP              {R0-R4,PC}
  220 00000142         
  221 00000142         ;Debug capture      
  222 00000142         Debug_Capture
  223 00000142 B57F            PUSH             {R0-R6,LR}  ;1.
  224 00000144         ; you write this
  225 00000144 F003 0300       AND              R3, #0
  226 00000148 482D            LDR              R0, =DataPt
  227 0000014A 6802            LDR              R2, [R0]
  228 0000014C 492B            LDR              R1, =DataBuffer
  229 0000014E F101 0164       ADD              R1, #100
  230 00000152 428A            CMP              R2, R1
  231 00000154 D025            BEQ              Return
  232 00000156 482C            LDR              R0, =TimePt
  233 00000158 6802            LDR              R2, [R0]
  234 0000015A 492A            LDR              R1, =TimeBuffer
  235 0000015C F501 71C8       ADD              R1, #400
  236 00000160 428A            CMP              R2, R1
  237 00000162 D01E            BEQ              Return      ;2.
  238 00000164         
  239 00000164 481A            LDR              R0, =GPIO_PORTA_DATA_R
  240 00000166 6801            LDR              R1, [R0]
  241 00000168 F001 0210       AND              R2, R1, #0x10
  242 0000016C 4413            ADD              R3, R2
  243 0000016E 4822            LDR              R0, =GPIO_PORTE_DATA_R
  244 00000170 6801            LDR              R1, [R0]
  245 00000172 F001 020F       AND              R2, R1, #0xF
  246 00000176 4413            ADD              R3, R2      ; Don't need R3 and
                                                             R2 After we store 
                                                            this 4.
  247 00000178         
  248 00000178 4821            LDR              R0, =DataPt ;5.
  249 0000017A 6801            LDR              R1, [R0]
  250 0000017C 600B            STR              R3, [R1]    ; Dump data into da
                                                            ta buffer
  251 0000017E         
  252 0000017E F101 0101       ADD              R1, R1, #1  ;6.
  253 00000182 6001            STR              R1, [R0]
  254 00000184         
  255 00000184         
  256 00000184 4821            LDR              R0, =NVIC_ST_CURRENT_R ;What do
                                                             we do with this 3.
                                                            
  257 00000186 6801            LDR              R1, [R0]
  258 00000188 4A1F            LDR              R2, =TimePt
  259 0000018A 6813            LDR              R3, [R2]
  260 0000018C 4D0F            LDR              R5, =Previous
  261 0000018E 682C            LDR              R4, [R5]
  262 00000190 EBA4 0601       SUB              R6, R4, R1
  263 00000194 F026 467F       AND              R6, R6, #0x00FFFFFF
  264 00000198 601E            STR              R6, [R3]
  265 0000019A F103 0304       ADD              R3, #4
  266 0000019E 6013            STR              R3, [R2]
  267 000001A0 6029            STR              R1, [R5]
  268 000001A2         Return
  269 000001A2 BD7F            POP              {R0-R6,PC}
  270 000001A4         



ARM Macro Assembler    Page 10 


  271 000001A4         ; edit the following only if you need to move pins from 
                       PA4, PE3-0      
  272 000001A4         ; logic analyzer on the real board
  273 000001A4 40004040 
                       PA4     equ              0x40004040  ; bit-specific addr
                                                            essing
  274 000001A4 4002403C 
                       PE30    equ              0x4002403C  ; bit-specific addr
                                                            essing
  275 000001A4 4000C000 
                       UART0_DR_R
                               equ              0x4000C000  ;write to this to s
                                                            end data
  276 000001A4         SendDataToLogicAnalyzer
  277 000001A4 491A            LDR              R1,=PA4
  278 000001A6 6809            LDR              R1,[R1]     ; read PA4
  279 000001A8 481A            LDR              R0,=PE30    ; read PE3-PE0
  280 000001AA 6800            LDR              R0,[R0]
  281 000001AC EA40 0001       ORR              R0,R0,R1    ;combine into one 5
                                                            -bit value
  282 000001B0 F040 0080       ORR              R0,R0,#0x80 ;bit7=1 means digit
                                                            al data
  283 000001B4 4918            LDR              R1,=UART0_DR_R
  284 000001B6 6008            STR              R0,[R1]     ; send data at 10 k
                                                            Hz
  285 000001B8 4770            BX               LR
  286 000001BA         
  287 000001BA         
  288 000001BA 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  289 000001BC                 END                          ; end of file
              00000000 
              400FE608 
              40025400 
              4002551C 
              00000000 
              400043FC 
              00000000 
              00186A00 
              00000000 
              40024400 
              4002451C 
              400253FC 
              40004400 
              4000451C 
              00000000 
              400243FC 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
              40004040 
              4002403C 
              4000C000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab4 -IC:\Users\Masaad\AppData\Local\
Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\Masaad\AppData\Local\Ar



ARM Macro Assembler    Page 11 


m\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" 
--predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --predefine
="TM4C123GH6PM SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000008

Symbol: DataBuffer
   Definitions
      At line 51 in file main.s
   Uses
      At line 202 in file main.s
      At line 228 in file main.s

DataPt 000001FC

Symbol: DataPt
   Definitions
      At line 53 in file main.s
   Uses
      At line 204 in file main.s
      At line 226 in file main.s
      At line 248 in file main.s

Direction 00000004

Symbol: Direction
   Definitions
      At line 48 in file main.s
   Uses
      At line 106 in file main.s
      At line 122 in file main.s
      At line 181 in file main.s

Index 00000000

Symbol: Index
   Definitions
      At line 47 in file main.s
   Uses
      At line 125 in file main.s
      At line 179 in file main.s

Previous 00000204

Symbol: Previous
   Definitions
      At line 55 in file main.s
   Uses
      At line 86 in file main.s
      At line 260 in file main.s

TimeBuffer 0000006C

Symbol: TimeBuffer
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 52 in file main.s
   Uses
      At line 207 in file main.s
      At line 234 in file main.s

TimePt 00000200

Symbol: TimePt
   Definitions
      At line 54 in file main.s
   Uses
      At line 208 in file main.s
      At line 232 in file main.s
      At line 258 in file main.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 60 in file main.s
   Uses
      None
Comment: .text unused
Debug_Capture 00000142

Symbol: Debug_Capture
   Definitions
      At line 222 in file main.s
   Uses
      At line 190 in file main.s
Comment: Debug_Capture used once
Debug_Init 0000010E

Symbol: Debug_Init
   Definitions
      At line 198 in file main.s
   Uses
      At line 93 in file main.s
Comment: Debug_Init used once
Heartbeat 000000B6

Symbol: Heartbeat
   Definitions
      At line 146 in file main.s
   Uses
      At line 89 in file main.s
      At line 117 in file main.s

Return 000001A2

Symbol: Return
   Definitions
      At line 268 in file main.s
   Uses
      At line 231 in file main.s
      At line 237 in file main.s

SendDataToLogicAnalyzer 000001A4

Symbol: SendDataToLogicAnalyzer
   Definitions
      At line 276 in file main.s
   Uses
      At line 68 in file main.s
Comment: SendDataToLogicAnalyzer used once
Start 00000004

Symbol: Start
   Definitions
      At line 65 in file main.s
   Uses
      At line 63 in file main.s
Comment: Start used once
Stepper 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: Stepper
   Definitions
      At line 62 in file main.s
   Uses
      At line 186 in file main.s
Comment: Stepper used once
Stepper_Init 00000082

Symbol: Stepper_Init
   Definitions
      At line 120 in file main.s
   Uses
      At line 90 in file main.s
Comment: Stepper_Init used once
Stepper_Step 000000E8

Symbol: Stepper_Step
   Definitions
      At line 177 in file main.s
   Uses
      At line 114 in file main.s
Comment: Stepper_Step used once
Switch_Init 000000C4

Symbol: Switch_Init
   Definitions
      At line 154 in file main.s
   Uses
      At line 91 in file main.s
Comment: Switch_Init used once
Wait 00000108

Symbol: Wait
   Definitions
      At line 193 in file main.s
   Uses
      At line 116 in file main.s
      At line 195 in file main.s

loop 0000004E

Symbol: loop
   Definitions
      At line 97 in file main.s
   Uses
      At line 118 in file main.s
Comment: loop used once
loop2 0000012C

Symbol: loop2
   Definitions
      At line 211 in file main.s
   Uses
      At line 218 in file main.s
Comment: loop2 used once
no 00000070

Symbol: no



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 113 in file main.s
   Uses
      At line 102 in file main.s
      At line 104 in file main.s

ok 0000006E

Symbol: ok
   Definitions
      At line 112 in file main.s
   Uses
      At line 110 in file main.s
Comment: ok used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 98 in file main.s
      At line 239 in file main.s

GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 168 in file main.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_DIR_R 40004400

Symbol: GPIO_PORTA_DIR_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 163 in file main.s
Comment: GPIO_PORTA_DIR_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 188 in file main.s
      At line 243 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 140 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 135 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 148 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 44 in file main.s
   Uses
      At line 82 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 78 in file main.s
Comment: GPIO_PORTF_DIR_R used once
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 256 in file main.s
Comment: NVIC_ST_CURRENT_R used once
PA4 40004040

Symbol: PA4
   Definitions
      At line 273 in file main.s
   Uses
      At line 277 in file main.s
Comment: PA4 used once
PE30 4002403C

Symbol: PE30
   Definitions
      At line 274 in file main.s
   Uses
      At line 279 in file main.s
Comment: PE30 used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 72 in file main.s
      At line 128 in file main.s
      At line 156 in file main.s

UART0_DR_R 4000C000

Symbol: UART0_DR_R
   Definitions
      At line 275 in file main.s
   Uses
      At line 283 in file main.s
Comment: UART0_DR_R used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 58 in file main.s
   Uses
      At line 201 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 57 in file main.s
   Uses
      At line 70 in file main.s
Comment: TExaS_Init used once
2 symbols
376 symbols in table
